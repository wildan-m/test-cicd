name: Staging Deployment

on:
  push:
    branches:
      - staging

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build Docker image
        run: docker build -f Dockerfile.dev -t my-app:staging .
      
      - name: Run Docker container
        run: |
          docker run -d -p 3000:3000 --name app-container my-app:staging
          # Wait for the container to start
          sleep 5
      
      - name: Check container logs for startup message
        run: |
          # Verify the app started by checking for the startup message
          if docker logs app-container | grep "App started on port"; then
            echo "✅ Application started successfully"
          else
            echo "❌ Application did not start properly"
            docker logs app-container
            exit 1
          fi
  
  deploy-to-netlify:
    runs-on: ubuntu-latest
    needs: build-and-run
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build for production
        run: npm run build
      
      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=build --prod
          secrets: '["NETLIFY_AUTH_TOKEN", "NETLIFY_SITE_ID"]'